(window.webpackJsonp=window.webpackJsonp||[]).push([[106],{187:function(e,t,a){"use strict";a.r(t);var r=a(0),i=Object(r.a)({},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"content"},[e._m(0),e._v(" "),e._m(1),e._v(" "),e._m(2),e._v(" "),a("p",[a("router-link",{attrs:{to:"./canvas-thumbnails.html"}},[e._v("Learn more about creating image thumbnails")])],1),e._v(" "),e._m(3),e._v(" "),a("p",[e._v("It is important to understand the different dimension properties of images in the browser.")]),e._v(" "),a("p",[a("router-link",{attrs:{to:"./sizing-notes.html"}},[e._v("Learn more about image dimensions")])],1),e._v(" "),e._m(4),e._v(" "),e._m(5),e._v(" "),a("p",[a("router-link",{attrs:{to:"./promises.html"}},[e._v("Learn more about Promises")])],1),e._v(" "),e._m(6),e._v(" "),a("p",[e._v("HTML5 has a number of methods that can be used for capturing audio and video on a mobile device. Much of the functionality is related to the WebRTC API and the MediaStream API.")]),e._v(" "),a("p",[e._v("Additionally, there is a Media and a Media Capture plugin for Cordova. This gives us lots of options for dealing with Audio and Video on a mobile device.")]),e._v(" "),a("p",[a("router-link",{attrs:{to:"./media-capture.html"}},[e._v("Learn more about Media Capturing")])],1),e._v(" "),e._m(7),e._v(" "),a("p",[e._v("There is a plugin with Cordova to allow you access to the file system on the mobile device. This plugin will let you add, move, or delete files and is very useful when working with media files.")]),e._v(" "),a("p",[a("router-link",{attrs:{to:"./cordova-files.html"}},[e._v("Learn more about Cordova File Plugin")])],1),e._v(" "),e._m(8),e._v(" "),e._m(9),e._v(" "),a("p",[a("router-link",{attrs:{to:"./property-descriptors.html"}},[e._v("Learn More about Property Descriptors")])],1),e._v(" "),e._m(10),e._v(" "),e._m(11),e._v(" "),a("p",[a("router-link",{attrs:{to:"./destructuring.html"}},[e._v("Learn more about destructuring")])],1)])},[function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"_8-canvas-media-capture-promises-and-advanced-properties-in-js"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8-canvas-media-capture-promises-and-advanced-properties-in-js","aria-hidden":"true"}},[this._v("#")]),this._v(" 8. Canvas Media Capture, Promises, and Advanced Properties in JS")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"working-with-video-on-canvas"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#working-with-video-on-canvas","aria-hidden":"true"}},[this._v("#")]),this._v(" Working with Video on Canvas")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("When you want to put videos on to the Canvas we can simply use the video player as the source of the data and call "),t("code",[this._v("context.drawImage()")]),this._v(". This method will also allow us to resize the image being placed. Every time you call "),t("code",[this._v("drawImage")]),this._v(" you are getting another image from the video player. If you use a timer you can repeatedly grab frames from the video as it plays. The video player doesn't even have to be on the screen to play. The video player can be off screen playing the video and providing frame images.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"image-sizing"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#image-sizing","aria-hidden":"true"}},[this._v("#")]),this._v(" Image Sizing")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"promises"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#promises","aria-hidden":"true"}},[this._v("#")]),this._v(" Promises")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("You have been working with Promises for quite a while already. The "),t("code",[this._v("fetch")]),this._v(" method is Promise wrapped around an AJAX call. Whenever you see a "),t("code",[this._v("then()")]),this._v(" method or a "),t("code",[this._v("catch()")]),this._v(" method, you are working with a Promise.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"media-capturing"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#media-capturing","aria-hidden":"true"}},[this._v("#")]),this._v(" Media Capturing")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"cordova-file-management"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cordova-file-management","aria-hidden":"true"}},[this._v("#")]),this._v(" Cordova File Management")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"property-descriptors"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#property-descriptors","aria-hidden":"true"}},[this._v("#")]),this._v(" Property Descriptors")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("JavaScript "),t("code",[this._v("Object")]),this._v("s have properties. The properties can be methods, events, or just properties. However, did you know that properties have built-in properties?  You can actually control what can be done with the properties. You can set default values, make properties readable, writable and enumerable.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"destructuring"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#destructuring","aria-hidden":"true"}},[this._v("#")]),this._v(" Destructuring")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Another great new feature in ES6 is the ability to Destructure objects. It uses the "),t("code",[this._v("spread")]),this._v(" operator and does some cool things to make our code more efficient.")])}],!1,null,null,null);i.options.__file="README.md";t.default=i.exports}}]);