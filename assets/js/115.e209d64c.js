(window.webpackJsonp=window.webpackJsonp||[]).push([[115],{214:function(t,a,s){"use strict";s.r(a);var n=s(0),e=Object(n.a)({},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),s("p",[t._v("Cordova takes advantage of the fact that mobile devices support SQLite in order to save data on the device.")]),t._v(" "),t._m(2),t._v(" "),s("p",[t._v("So, the basic process for working with a SQLite database in Cordova is:")]),t._v(" "),t._m(3),t._v(" "),s("p",[t._v("You won't always have all these steps but these are the things you would normally encounter.")]),t._v(" "),t._m(4),t._v(" "),s("p",[t._v("So, before we can save or access any data, we need to create a database. In Cordova here is the basic script we would use to set up our database.")]),t._v(" "),t._m(5),t._m(6),t._v(" "),t._m(7),t._v(" "),s("p",[t._v("Here is a codepen sample "),s("a",{attrs:{href:"http://codepen.io/mad-d/pen/WwOVLE",target:"_blank",rel:"noopener noreferrer"}},[t._v("working with SQLite/WebSQL"),s("OutboundLink")],1)]),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),t._m(10),t._v(" "),t._m(11),s("p",[t._v("This would create a table called stuff, but only if it doesn't exist. The table would have two columns, one called id and the other called info. The id column values must be unique. The id column will be our primary key.")]),t._v(" "),t._m(12),t._v(" "),s("p",[t._v("Once you have the table then you will want to add data to it. This step could be run the first time your app runs in order to put some default information into the table or it could happen after some interactions with the user.")]),t._v(" "),t._m(13),s("p",[t._v("This would add a single row into the table and then alter the values in that row.")]),t._v(" "),s("p",[t._v("See "),s("a",{attrs:{href:"http://cordova.apache.org/docs/en/latest/cordova/storage/storage.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("this page"),s("OutboundLink")],1),t._v(" for more information on all of this.")]),t._v(" "),s("p",[t._v("Also "),s("a",{attrs:{href:"http://www.tutorialspoint.com/html5/html5_web_sql.htm",target:"_blank",rel:"noopener noreferrer"}},[t._v("see tutorialspoint"),s("OutboundLink")],1),t._v(" for specific details on WebSQL.")]),t._v(" "),t._m(14),t._v(" "),s("p",[t._v("Assuming that tables have been created and that they contain data, we want to retrieve a recordset that we can use in our Cordova app.")]),t._v(" "),s("p",[t._v("While the previous examples are calling the executeSQL method with only one argument there are actually four parameters -  SQL statement, container for results, success callback function, error callback function. The last three parameters are all optional.")]),t._v(" "),s("p",[t._v("It is important to note that both transactions as well as the individual SQL statements both have success and failure callback functions.")]),t._v(" "),t._m(15),t._m(16),t._v(" "),s("p",[t._v("Since we are working with SQLite instead of MySQL it is probably helpful to have a few resources at hand.")]),t._v(" "),s("p",[s("a",{attrs:{href:"http://www.sqlite.org/datatype3.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("This list"),s("OutboundLink")],1),t._v(" is the list of datatypes available to us in SQLite for our table columns. Basically, we only have five datatypes to work with. Keep in mind that SQLite is a SIMPLE database. It is intended to be used as an embedded standalone database.")]),t._v(" "),t._m(17),t._m(18),t._v(" "),s("p",[s("a",{attrs:{href:"http://www.sqlite.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("main reference site for all information about SQLite"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("If you are looking for a bit more information about SQLite - "),s("a",{attrs:{href:"http://souptonuts.sourceforge.net/readme_sqlite_tutorial.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("here is a small tutorial"),s("OutboundLink")],1)]),t._v(" "),t._m(19),t._v(" "),s("p",[t._v("When working with Cordova we will use this plugin")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.npmjs.com/package/cordova-sqlite-storage",target:"_blank",rel:"noopener noreferrer"}},[t._v("Cordova SQLite Storage plugin"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("There are a few minor differences between the example code from above and the version with the plugin to run on Android and iOS.")]),t._v(" "),s("p",[t._v("First is a modified version of the method to open or create the database.")]),t._v(" "),t._m(20),s("p",[t._v("Second is the method to test if you were able to connect to the database.")]),t._v(" "),t._m(21),s("p",[t._v("Third is the ability to call queries directly on the DB object without wrapping it in a transaction.")]),t._v(" "),t._m(22),t._m(23),t._v(" "),s("p",[t._v("Here are some good links that will help you work with SQLite and WebSQL on iOS (and Android)")]),t._v(" "),s("p",[s("a",{attrs:{href:"http://www.raymondcamden.com/index.cfm/2011/10/20/Example-of-PhoneGaps-Database-Support",target:"_blank",rel:"noopener noreferrer"}},[t._v("Raymond Camden PhoneGap DB article 1"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://developer.apple.com/library/safari/documentation/iphone/conceptual/safarijsdatabaseguide/UsingtheJavascriptDatabase/UsingtheJavascriptDatabase.html#//apple_ref/doc/uid/TP40007256-CH3-XSW1",target:"_blank",rel:"noopener noreferrer"}},[t._v("Apple Developer JS DB guide"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"http://www.raymondcamden.com/index.cfm/2013/8/14/Updating-PhoneGap-Databases",target:"_blank",rel:"noopener noreferrer"}},[t._v("Raymond Camden Phonegap DB article 2"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"http://css.dzone.com/articles/adding-database",target:"_blank",rel:"noopener noreferrer"}},[t._v("DZone DB Reference"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("router-link",{attrs:{to:"./sql-sample.html"}},[t._v("Simple SQL Sample")])],1)])},[function(){var t=this.$createElement,a=this._self._c||t;return a("h1",{attrs:{id:"cordova-and-sqlite"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cordova-and-sqlite","aria-hidden":"true"}},[this._v("#")]),this._v(" Cordova and SQLite")])},function(){var t=this.$createElement,a=this._self._c||t;return a("h2",{attrs:{id:"saving-data-on-mobile-devices"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#saving-data-on-mobile-devices","aria-hidden":"true"}},[this._v("#")]),this._v(" Saving Data on Mobile Devices")])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("p",[t._v("If you have worked with any other database then you will be able to work with SQLite. It uses the same basic SQL syntax to "),s("code",[t._v("INSERT")]),t._v(", "),s("code",[t._v("UPDATE")]),t._v(", "),s("code",[t._v("DELETE")]),t._v(" or "),s("code",[t._v("SELECT")]),t._v(" information. You can "),s("code",[t._v("CREATE")]),t._v(", "),s("code",[t._v("ALTER")]),t._v(", and "),s("code",[t._v("DROP")]),t._v(" tables. You can even run transactions.")])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ol",[s("li",[t._v("Open a database")]),t._v(" "),s("li",[t._v("Create table(s) as desired.")]),t._v(" "),s("li",[t._v("Start a transaction")]),t._v(" "),s("li",[t._v("Insert data into your table(s)")]),t._v(" "),s("li",[t._v("Select data from the table(s) to display")]),t._v(" "),s("li",[t._v("Update data in the table(s) based on user input")])])},function(){var t=this.$createElement,a=this._self._c||t;return a("h2",{attrs:{id:"creating-a-database"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#creating-a-database","aria-hidden":"true"}},[this._v("#")]),this._v(" Creating a Database")])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("document"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("addEventListener")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v('"DOMContentLoaded"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" init"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ndocument"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("addEventListener")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v('"deviceready"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" onReady"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token boolean"}},[t._v("false")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token comment"}},[t._v("//or you can combine these two and just use the deviceready event")]),t._v("\n\n"),s("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("init")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{attrs:{class:"token comment"}},[t._v("//ready to add click and tap listeners, etc.")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("onReady")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" ev "),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{attrs:{class:"token comment"}},[t._v("//ready to use Cordova plugin features")]),t._v("\n  "),s("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" db "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" window"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("openDatabase")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v('"myDb"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"1.0"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"Display Name"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("1024000")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("p",[a("code",[this._v("openDatabase")]),this._v(" will look to open the database and if it does not exist, then create it. It will check both the DB name and the version number.")])},function(){var t=this.$createElement,a=this._self._c||t;return a("p",[this._v("It takes four parameters - "),a("code",[this._v("( actual DB name, version number, DB display name, max size )")])])},function(){var t=this.$createElement,a=this._self._c||t;return a("h2",{attrs:{id:"creating-a-database-table"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#creating-a-database-table","aria-hidden":"true"}},[this._v("#")]),this._v(" Creating a Database Table")])},function(){var t=this.$createElement,a=this._self._c||t;return a("p",[this._v("Once you have a database object from the window.openDatabase method then we can create a table, if needed. "),a("code",[this._v("CREATE TABLE")]),this._v(" is simply a SQL command like any other. It will be run with the "),a("code",[this._v("executeSQL( )")]),this._v(" method on the transaction object.")])},function(){var t=this.$createElement,a=this._self._c||t;return a("p",[this._v("The database object will call its "),a("code",[this._v("transaction( )")]),this._v(" method which takes three parameters. All three parameters are function calls. The first function is the one which contains all the steps in your transaction. The second is the error callback. The third is the success function. A transaction is a bundle of one or more SQL statements.")])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("onReady")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" ev "),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" db "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" window"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("openDatabase")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v('"myDb"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"1.0"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"demo"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("1024000")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  db"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("transaction")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" doTrans"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" successFunc"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" errFunc "),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n"),s("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("doTrans")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" trans "),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{attrs:{class:"token comment"}},[t._v("//trans is the variable that holds the transaction object")]),t._v("\n  trans"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("executeSql")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'CREATE TABLE IF NOT EXISTS stuff( id unique, info)'")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("h2",{attrs:{id:"putting-data-into-a-table"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#putting-data-into-a-table","aria-hidden":"true"}},[this._v("#")]),this._v(" Putting Data into a Table")])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("doTrans")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" trans "),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{attrs:{class:"token comment"}},[t._v("//trans is the variable that holds the transaction object")]),t._v("\n  trans"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("executeSql")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'CREATE TABLE IF NOT EXISTS stuff( id unique, info)'")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  trans"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("executeSql")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'INSERT INTO stuff(id, info) VALUES(1, \"Cheese\")'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  trans"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("executeSql")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'UPDATE stuff SET info=\"Apple Pie\" WHERE id=1'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("h2",{attrs:{id:"retrieving-data-from-a-table"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#retrieving-data-from-a-table","aria-hidden":"true"}},[this._v("#")]),this._v(" Retrieving Data from a Table")])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("trans"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("executeSql")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"SELECT * FROM stuff"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" querySuccess"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" transErr"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("querySuccess")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" trans"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" results"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{attrs:{class:"token comment"}},[t._v("//trans is the reference to the transaction")]),t._v("\n  "),s("span",{attrs:{class:"token comment"}},[t._v("//results is the container for the SQL record set / SQLResultSetList")]),t._v("\n  console"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" results"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rows"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  console"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" results"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("insertId "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('" is the id of the last inserted row"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  console"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" results"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rowsAffected "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('" is the number of rows affected by an update or delete"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" len "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" results"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rows"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{attrs:{class:"token keyword"}},[t._v("for")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),s("span",{attrs:{class:"token number"}},[t._v("0")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("len"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{attrs:{class:"token operator"}},[t._v("++")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" results"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rows"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("item")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("info "),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token comment"}},[t._v("//info is the column name ")]),t._v("\n    "),s("span",{attrs:{class:"token comment"}},[t._v("//item( i ) refers to a single row in our result set.")]),t._v("\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("h2",{attrs:{id:"specific-information-for-sqlite"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#specific-information-for-sqlite","aria-hidden":"true"}},[this._v("#")]),this._v(" Specific Information for SQLite")])},function(){var t=this.$createElement,a=this._self._c||t;return a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[this._v("NULL, TEXT, INTEGER, REAL, and BLOB are our five types. Everything fits into those five.\n\nTEXT - all strings, dates, time values.\n\nINTEGER - all numbers without decimal places.\n\nREAL - all numbers with a decimal place.\n\nBLOB - binary data like an image file.\n\nNULL - is Null, empty, void, undefined, nothing, nada. You get the point.\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("p",[a("strong",[this._v("Note:")]),this._v(" If you have SQL commands from other databases for creating tables then SQLite will actually accept many more datatypes. However, internally it will convert them to the five types listed above.")])},function(){var t=this.$createElement,a=this._self._c||t;return a("h2",{attrs:{id:"specifics-for-mobile-hybrid-apps"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#specifics-for-mobile-hybrid-apps","aria-hidden":"true"}},[this._v("#")]),this._v(" Specifics for Mobile Hybrid Apps")])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" db "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" window"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sqlitePlugin"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("openDatabase")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("name"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'myDB'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" iosDatabaseLocation"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'default'")]),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" successcb"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" errorcb"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("window"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sqlitePlugin"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("echoTest")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("successCallback"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" errorCallback"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("db"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("executeSql")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v('"SELECT * FROM users"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" successCB"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" errorCB"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("h2",{attrs:{id:"references"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#references","aria-hidden":"true"}},[this._v("#")]),this._v(" References")])}],!1,null,null,null);e.options.__file="cordova-sql.md";a.default=e.exports}}]);