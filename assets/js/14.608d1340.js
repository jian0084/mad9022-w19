(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{227:function(e,a,t){"use strict";t.r(a);var o=t(0),s=Object(o.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("div",{staticClass:"content"},[t("h2",{attrs:{id:"html-canvas-assignment"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#html-canvas-assignment","aria-hidden":"true"}},[e._v("#")]),e._v(" HTML Canvas Assignment")]),e._v(" "),t("h3",{attrs:{id:"description"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#description","aria-hidden":"true"}},[e._v("#")]),e._v(" Description")]),e._v(" "),t("p",[e._v("You will be creating a webpage that has two canvas elements. These two elements will be displaying InfoGraphics that represent the contents of a JSON file that you create.")]),e._v(" "),t("p",[e._v("Make the Canvas elements responsive so that they are always centered and occupying 90% of the width of the screen, up to a maximum width of 1000px. Make sure to maintain an aspect ratio of 4:3.")]),e._v(" "),t("p",[e._v("The first canvas element should display a Pie Chart of the data.")]),e._v(" "),t("p",[e._v("The second canvas element should display the data as a line graph, a bar chart, objects with relative size, or some other way you want to display it. Be creative.")]),e._v(" "),t("h3",{attrs:{id:"the-data"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#the-data","aria-hidden":"true"}},[e._v("#")]),e._v(" The Data")]),e._v(" "),t("p",[e._v("Your JSON file should contain an array with data for 6 - 8 objects. Each object needs to have an "),t("code",[e._v("id")]),e._v(", "),t("code",[e._v("label")]),e._v(" or "),t("code",[e._v("name")]),e._v(" or "),t("code",[e._v("title")]),e._v(", some unique numerical value about it, and then a "),t("code",[e._v("color")]),e._v(" value. The "),t("code",[e._v("color")]),e._v(" value can be a string or an array. Inside the array could be multiple colours that you use for an item. Eg: One colour for the label, one colour for the fill, and a third for the stroke.")]),e._v(" "),t("p",[e._v("Your webpage needs to use "),t("code",[e._v("fetch( )")]),e._v(" to retrieve the JSON file. You must have a "),t("code",[e._v("catch()")]),e._v(" method to handle failed requests. Only one fetch is required. Use the same data for both charts.")]),e._v(" "),t("p",[e._v("The values in the charts should be displayed to represent a percentage of the total of all the numerical values.")]),e._v(" "),t("p",[e._v("For each item display the label AND the percentage. The percentage should be to one decimal place and shown with a percentage sign. Eg: "),t("code",[e._v("12.3%")]),e._v(". The label and the percentage can be in different places on the charts, as long as they are in a place that will connect them visually with the shape that represents the number.")]),e._v(" "),t("p",[e._v("You can use JavaScript to draw a line from each shape to each label too, as desired.")]),e._v(" "),t("h3",{attrs:{id:"submission"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#submission","aria-hidden":"true"}},[e._v("#")]),e._v(" Submission")]),e._v(" "),t("p",[e._v("Make sure that your GitHub Username is the same as your Algonquin username.")]),e._v(" "),t("p",[e._v("Create a PRIVATE GitHub Repo called "),t("code",[e._v("canvas-charts")]),e._v(". Include a README.md file.")]),e._v(" "),t("p",[e._v("Invite your professor to collaborate on the Repo.")]),e._v(" "),t("p",[e._v("Clone the Repo on your computer. Then start your work locally.")]),e._v(" "),t("p",[e._v("Edit the README.md file with MarkDown to create a description of what the project is an how it works.")]),e._v(" "),t("p",[e._v("On BS LMS, when you are finished your work, submit the URL of your Repo.")]),e._v(" "),t("p",[e._v("No need for a gh-pages branch or GitHub pages version of the repo.")])])}],!1,null,null,null);s.options.__file="canvas.md";a.default=s.exports}}]);